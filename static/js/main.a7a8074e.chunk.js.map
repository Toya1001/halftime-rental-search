{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["CarsRow","_ref","cars","react_default","a","createElement","key","ID","Manufacturer","Model","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","filter","filterSet","style","margin","width","paddingTop","className","value","onChange","evt","target","toLowerCase","includes","map","App_CarsRow","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"0tBAKMA,EAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACZC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAKK,IACNJ,EAAAC,EAAAC,cAAA,UAAKH,EAAKM,cACVL,EAAAC,EAAAC,cAAA,UAAKH,EAAKO,SAiDLC,MArCf,WACE,IAAAC,EAA4BC,IAAMC,SAAS,IAA3CC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAAOM,EAAPH,EAAA,GAAeI,EAAfJ,EAAA,GACA,OACEX,EAAAC,EAAAC,cAAA,OACAc,MAAO,CACLC,OAAQ,OACRC,MAAM,IACNC,WAAY,SAGZnB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,SAAd,2BACApB,EAAAC,EAAAC,cAAA,SACAmB,MAASP,EACTQ,SAAU,SAACC,GAAD,OAASR,EAAUQ,EAAIC,OAAOH,UAE1CrB,EAAAC,EAAAC,cAAA,SAAOgB,MAAM,QACXlB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aACIH,EACDe,OACC,SAACf,GAAD,OAAUA,EAAKO,MAAMmB,cAAcC,SAASZ,EAAOW,iBACpDE,IAAI,SAAC5B,GAAD,OACHC,EAAAC,EAAAC,cAAC0B,EAAD,CAAS7B,KAAQA,EAAMI,IAAKJ,EAAKK,WCnC5ByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAApC,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP1C,EAAAC,EAAAC,cAACF,EAAAC,EAAM0C,WAAP,KACE3C,EAAAC,EAAAC,cAAC0C,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.a7a8074e.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\";\nimport './App.css';\nimport cars from \"./cars.json\";\n\nconst CarsRow=( {cars})=>(\n  <tr key={cars.ID}>\n          <td>{cars.Manufacturer}</td>\n          <td>{cars.Model}</td>\n        </tr>\n)\n\nCarsRow.propTypes = {\n  cars: PropTypes.shape({\n    Manufacturer: PropTypes.string,\n     Model: PropTypes.string\n  }),\n \n};\n\nfunction App() {\n  const [filter, filterSet] = React.useState(\"\");\n  return (\n    <div\n    style={{ \n      margin: \"auto\",\n      width:800,\n      paddingTop: \"1rem\",\n     }}\n    >\n      <h1 className=\"title\"> Halftime Rental Search</h1>\n      <input\n      value = {filter}\n      onChange={(evt) => filterSet(evt.target.value)}\n      />\n    <table width=\"100%\">\n      <thead>\n        <tr>\n          <th>Manufacturer </th>\n          <th>Model</th>\n        </tr>\n      </thead>\n      <tbody>\n        { cars \n        .filter(\n          (cars) => cars.Model.toLowerCase().includes(filter.toLowerCase()))\n        .map((cars)=>(\n          <CarsRow cars = {cars} key={cars.ID}/>\n          \n        ))}\n      </tbody>\n      \n    </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}